{"version":3,"sources":["webpack://movie-list/./src/api/movie.js","webpack://movie-list/./src/movie/list/index.js","webpack://movie-list/./src/movie/list/index.module.less?bbc3","webpack://movie-list/./src/movie/pager/index.module.less?10e2","webpack://movie-list/./src/movie/pager/index.js","webpack://movie-list/./src/movie/index.js"],"names":["getMovies","page","limit","axios","params","size","resp","data","container","createMovieTags","movies","result","map","m","url","cover","title","rate","join","html","$","addClass","appendTo","createPagers","total","createTag","text","status","targetPage","span","className","styles","on","movieList","movieTotal","empty","pageNumber","Math","ceil","min","floor","maxcount","max","i","init"],"mappings":"8cACO,SAAeA,EAAtB,oC,iDAAO,WAAyBC,EAAKC,GAA9B,sGACiBC,QAAU,cAAc,CACxCC,OAAO,CACHH,OACAI,KAAKH,KAJV,cACKI,EADL,yBAQMA,EAAKC,MARX,4C,qECIP,IAAIC,EAWG,SAASC,EAAgBC,GAC5B,IAAMC,EAASD,EAAOE,KAAI,SAACC,GAAD,2CAEdA,EAAEC,IAFY,uCAEsBD,EAAEE,MAFxB,iCAGdF,EAAEC,IAHY,uCChB8B,0BDgB9B,aAGuCD,EAAEG,MAHzC,oCChB+D,wBDgB/D,eAIKH,EAAEI,KAJP,wBAKhBC,KAAK,IACfV,EAAUW,KAAKR,GAhBhBH,EAAWY,IAAE,SAASC,SCNG,yBDMwBC,SAAS,QEN7D,SAAgB,MAAQ,0BAA0B,SAAW,0BAA0B,OAAS,yB,4TCQhG,IAAId,EAaG,SAASe,EAAatB,EAAMC,EAAOsB,GAOtC,SAASC,EAAUC,EAAMC,EAAQC,GAC7B,IAAMC,EAAOT,IAAE,UAAUE,SAASd,GAAWkB,KAAKA,GAC5CI,EAAYC,EAAOJ,GACzBE,EAAKR,SAASS,GACC,KAAXH,GACAE,EAAKG,GAAG,QAAR,2BAAiB,mHAEMhC,EAAU4B,EAAY1B,GAF5B,OAIbO,GAFMH,EAFO,QAIQC,KAAK0B,WAE1BV,EAAaK,EAAY1B,EAAOI,EAAKC,KAAK2B,YAN7B,4CAXzB1B,EAAU2B,QAsBV,IAAMC,EAAaC,KAAKC,KAAKd,EAAQtB,GAGrCuB,EAAU,KAAe,IAATxB,EAAa,WAAa,GAAI,GAE9CwB,EAAU,MAAgB,IAATxB,EAAa,WAAa,GAAIA,EAAO,GAGtD,IACIsC,EAAMF,KAAKG,MAAMvC,EAAOwC,GAC5BF,EAAM,IAAMA,EAAM,GAClB,IAAIG,EAAMH,EAHO,GAGU,EAC3BG,EAAMN,IAAeM,EAAMN,GAC3B,IAAK,IAAIO,EAAIJ,EAAKI,GAAKD,EAAKC,IACxBlB,EAAUkB,EAAEA,IAAI1C,EAAM,SAAS,GAAG0C,GAItClB,EAAU,MAAOxB,IAASmC,EAAa,WAAa,GAAInC,EAAO,GAG/DwB,EAAU,KAAMxB,IAASmC,EAAa,WAAa,GAAIA,G,6WC7D3D,mHACoBpC,EAAU,EAAE,IADhC,OAECS,GADMH,EADP,QAEsBC,KAAK0B,WAC1BV,EAAa,EAAE,GAAGjB,EAAKC,KAAK2B,YAH7B,4C,sBDMI1B,EAAYY,IAAE,SAASC,SAASU,SAAcT,SAAS,Q,mCCD3DsB","file":"js/chunk-2724c.js","sourcesContent":["import axios from \"axios\";\r\nexport async function getMovies(page,limit){\r\n      const resp =await axios.get('/api/movies',{\r\n        params:{\r\n            page,\r\n            size:limit\r\n        },\r\n      \r\n      })\r\n      return resp.data;\r\n}","import $ from \"jquery\";\r\nimport styles from './index.module.less'\r\n/**\r\n * 初始化函数，负责创建容器\r\n */\r\nlet container;\r\nfunction init() {\r\n   container= $('<div>').addClass(styles.container).appendTo('#app')\r\n}\r\n\r\ninit();\r\n\r\n/**\r\n * 根据传入的电影数组，创建元素，填充到容器中\r\n * @params movies 电影数组\r\n */\r\nexport function createMovieTags(movies) {\r\n    const result = movies.map((m) => `\r\n    <div>\r\n     <a href=\"${m.url}\" target=\"_blank\"><img src=\"${m.cover}\"></a>\r\n     <a href=\"${m.url}\" target=\"_blank\"><p class=\"${styles.title}\">${m.title}</p></a>\r\n     <p class=\"${styles.rate}\">评分${m.rate}</p>\r\n     </div>`).join('');\r\n    container.html(result)\r\n    }","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kOrlLuNtBylKs91raZIOU\",\"title\":\"_3pYTYHeeDH0bFkeCn3ld06\",\"rate\":\"nm_NW-jBa8IeDMNfp4JFo\"};","// extracted by mini-css-extract-plugin\nexport default {\"pager\":\"_1VN1YU2G2lDHkQWRtrceUO\",\"disabled\":\"_2dd1ehDdnLaT1lF72w3i1q\",\"active\":\"kLc696jYNRmHedH9tJqp3\"};","import $ from \"jquery\";\r\nimport styles from './index.module.less'\r\nimport { getMovies } from \"@/api/movie\";\r\nimport { createMovieTags } from \"../list\";\r\n\r\n\r\n/**\r\n * 初始化函数，负责创建容器\r\n */\r\nlet container;\r\nfunction init() {\r\n    container = $('<div>').addClass(styles.pager).appendTo('#app')\r\n}\r\n\r\ninit();\r\n\r\n/**\r\n * 根据传入的页码、页容量、总记录数，创建分页区域的标签\r\n * @params page 页码\r\n * @params limit 页容量\r\n * @params total 总页数\r\n */\r\nexport function createPagers(page, limit, total) {\r\n    container.empty();\r\n    /**\r\n     * 辅助函数，负责帮忙创建一个页码标签\r\n     * @params text 标签的文本\r\n     * @params status 标签的状态，空字符串-普通状态，disabled-禁用状态，active-选中状态\r\n     */\r\n    function createTag(text, status, targetPage) {\r\n        const span = $('<span>').appendTo(container).text(text);\r\n        const className = styles[status]\r\n        span.addClass(className);\r\n        if (status === '') {\r\n            span.on('click', async function () {\r\n                // 重新拿数据\r\n                const resp = await getMovies(targetPage, limit)\r\n                // 重新生成列表\r\n                createMovieTags(resp.data.movieList)\r\n                // 重新生成分页区\r\n                createPagers(targetPage, limit, resp.data.movieTotal)\r\n            })\r\n        }\r\n    }\r\n    // 最大页码\r\n    const pageNumber = Math.ceil(total / limit);\r\n    //1. 创建首页标签\r\n    // 当前页码为1就禁用否者就是普通\r\n    createTag('首页', page === 1 ? 'disabled' : '', 1)\r\n    //2. 创建上一页标签\r\n    createTag('上一页', page === 1 ? 'disabled' : '', page - 1)\r\n\r\n    //3. 创建数字页码标签\r\n    const maxcount = 10;//显示页码的数量\r\n    let min = Math.floor(page - maxcount / 2);//最小页码\r\n    min < 1 && (min = 1)\r\n    let max = min + maxcount - 1;\r\n    max > pageNumber && (max = pageNumber)\r\n    for (let i = min; i <= max; i++) {\r\n        createTag(i,i===page ?'active':'',i)\r\n\r\n    }\r\n    //4. 创建下一页标签\r\n    createTag('下一页', page === pageNumber ? 'disabled' : '', page + 1)\r\n\r\n    //5. 创建尾页标签\r\n    createTag('尾页', page === pageNumber ? 'disabled' : '', pageNumber)\r\n\r\n}","import { getMovies } from '../api/movie';\r\nimport {createMovieTags} from './list';\r\nimport { createPagers } from './pager';\r\n\r\n\r\nasync function init(){\r\n const resp= await  getMovies(1,30);\r\n createMovieTags(resp.data.movieList)//创建列表\r\n createPagers(1,30,resp.data.movieTotal);\r\n}\r\ninit()"],"sourceRoot":""}